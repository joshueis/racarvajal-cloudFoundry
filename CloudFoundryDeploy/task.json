{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "c2aa46b7-8a3e-4d8c-b83c-e8ec6a467356",
  "name": "CloudFoundryPushRoll",
  "friendlyName": "Cloud Foundry Deploy",
  "description": "Push your apps to Cloud Foundry with zero downtime using their rolling feature. See: https://docs.cloudfoundry.org/devguide/deploy-apps/rolling-deploy.html#deployment-process",
  "helpMarkDown": "",
  "category": "Deploy",
  "author": "Israel Carvajal",
  "version": {
    "Major": 0,
    "Minor": 1,
    "Patch": 0
  },
  "instanceNameFormat": "Push to Cloud Foundry with zero downtime",
  "inputs": [
    {
      "name": "cfEndpoint",
      "type": "connectedService:Generic",
      "label": "Cloud Foundry Endpoint",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Service endpoint for your Cloud Foundry instance."
    },
    {
      "name": "skipSSLValidation",
      "type": "boolean",
      "label": "Skip SSL Validation",
      "defaultValue": "false",
      "required": "false",
      "helpMarkDown": "Skip SSL validation when connecting to the Cloud Foundry endpoint.",
      "groupName": "connection"
    },
    {
      "name": "oneTimePassword",
      "type": "boolean",
      "label": "Use One-time Password",
      "defaultValue": "false",
      "required": "false",
      "helpMarkDown": "Use a one-time password to login to the Cloud Foundry instance.",
      "groupName": "connection"
    },
    {
      "name": "ssoPasscode",
      "type": "string",
      "label": "One-time Passcode",
      "defaultValue": "",
      "required": "true",
      "helpMarkDown": "Specify the one-time passcode to login to the Cloud Foundry instance. To acquire the one-time passcode, run cf CLI login command with --sso option. To be able to specify the one-time passcode at build queue time, use a variable and allow it at queue time.",
      "groupName": "connection",
      "visibleRule": "oneTimePassword = true"
    },
    {
      "name": "org",
      "type": "string",
      "label": "Org",
      "defaultValue": "",
      "required": "false",
      "helpMarkDown": "Optionally specify the org to login to on the Cloud Foundry instance. The default org will be used if nothing is specified.",
      "groupName": "connection"
    },
    {
      "name": "space",
      "type": "string",
      "label": "Space",
      "defaultValue": "",
      "required": "false",
      "helpMarkDown": "Optionally specify the space to login to on the Cloud Foundry instance. The default space will be used if nothing is specified.",
      "groupName": "connection"
    },
    {
      "name": "deploymentOptions",
      "type": "radio",
      "label": "Specify Options",
      "defaultValue": "manifest",
      "required": "true",
      "groupName": "deployment",
      "options": {
        "manifest": "With a manifest file",
        "manual": "Manually"
      }
    },
    {
      "name": "cfManifest",
      "type": "filePath",
      "label": "Manifest File",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The path to the manifest file containing Cloud Foundry deployment options.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manifest"
    },
    {
      "name": "name",
      "type": "string",
      "label": "Name",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Name of the application to push to Cloud Foundry.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual"
    },
    {
      "name": "instances",
      "type": "string",
      "label": "Instances",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Number of instances of the application to deploy.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual"
    },
    {
      "name": "memoryLimit",
      "type": "string",
      "label": "Memory Limit",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The maximum amount of memory each instance of the pushed application can consume.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual"
    },
    {
      "name": "startCommand",
      "type": "string",
      "label": "Start Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The command that Cloud Foundry uses to start each instance of your application.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual"
    },
    {
      "name": "useRoute",
      "type": "boolean",
      "label": "Use Route",
      "defaultValue": "true",
      "required": true,
      "helpMarkDown": "Supply and map a route to this application.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual"
    },
    {
      "name": "domain",
      "type": "string",
      "label": "Domain",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Domain where the application is pushed.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual && useRoute = true"
    },
    {
      "name": "host",
      "type": "string",
      "label": "Host",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Subdomain where the application is pushed.",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual && useRoute = true"
    },
    {
      "name": "buildPackOptions",
      "type": "picklist",
      "label": "Buildpack Options",
      "defaultValue": "none",
      "required": "true",
      "groupName": "deployment",
      "helpMarkDown": "Specify a buildpack using a service endpoint or by a custom name. Please see (http://cli.cloudfoundry.org/en-US/cf/push.html) for more information regarding buildpacks.",
      "options": {
        "custom": "Custom",
        "builtin": "Use built-in buildpacks only",
        "none": "None"
      },
      "visibleRule": "deploymentOptions = manual"
    },
    {
      "name": "buildPackCustom",
      "type": "string",
      "label": "Buildpack",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Custom buildpack by name (e.g. my-buildpack) or Git URL (e.g. https://github.com/cloudfoundry/java-buildpack.git).",
      "groupName": "deployment",
      "visibleRule": "deploymentOptions = manual && buildPackOptions = custom"
    },
    {
      "name": "additionalDeployArgs",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional arguments to pass to `cf push`. Reference: http://docs.cloudfoundry.org/cf-cli/getting-started.html#push",
      "groupName": "deployment"
    },
    {
      "name": "rollingStrategy",
      "type": "boolean",
      "label": "Use rolling strategy for zero downtime",
      "defaultValue": "true",
      "required": false,
      "helpMarkDown": "It pushed the application with `--strategy rolling`",
      "groupName": "deployment"
    },
    {
      "name": "startOnDeploy",
      "type": "boolean",
      "label": "Start On Deploy",
      "defaultValue": "true",
      "required": false,
      "helpMarkDown": "Starts the application after it is deployed.",
      "groupName": "deployment"
    },
    {
      "name": "createServices",
      "type": "boolean",
      "label": "Create Services",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Choose to create new services before pushing your application.",
      "groupName": "services"
    },
    {
      "name": "createServiceArgs",
      "type": "multiLine",
      "label": "Create Service Arguments",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Specify name of user provided service to create with optional properties. Specify each service on a new line e.g. \n\n `my-db-service1` \n\n `my-route-service -r https://example.com`",
      "groupName": "services",
      "visibleRule": "createServices = true"
    },
    {
      "name": "updateServices",
      "type": "boolean",
      "label": "Update Services",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Choose to update services before pushing your application.",
      "groupName": "services"
    },
    {
      "name": "updateServiceArgs",
      "type": "multiLine",
      "label": "Update Service Arguments",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Specify name of user provided service to update with optional properties. Specify each service on a new line e.g. \n\n `ups-one -p '{\"key\": \"value\"}'` \n\n `ups-one -p credential.json",
      "groupName": "services",
      "visibleRule": "updateServices = true"
    },
    {
      "name": "bindServices",
      "type": "boolean",
      "label": "Bind Services",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Choose to bind existing services to your application.",
      "groupName": "services"
    },
    {
      "name": "appName",
      "type": "string",
      "label": "Application Name",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Specify the name of the application to which to bind services.",
      "groupName": "services",
      "visibleRule": "bindServices = true"
    },
    {
      "name": "bindServiceArgs",
      "type": "multiLine",
      "label": "Bind Service Arguments",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Specify service names with optional service-specific configuration parameters to bind to the application. Specify each service on a new line e.g. \n\n`my-db-service1` \n\n `my-db-service2 -c ~/workspace/tmp/instance_config.json`",
      "groupName": "services",
      "visibleRule": "bindServices = true"
    },
    {
      "name": "workingDirectory",
      "type": "filePath",
      "label": "Working Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The working directory of the application that should be pushed to Cloud Foundry.",
      "groupName": "advanced"
    },
    {
      "name": "cfToolLocation",
      "type": "filePath",
      "label": "Cloud Foundry CLI Location",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Optionally specify the location to the cf CLI. If location is not specified, cf CLI needs to be in the PATH.",
      "groupName": "advanced"
    }
  ],
  "execution": {
    "Node10": {
      "target": "cloudFoundryDeploy.js"
    }
  },
  "messages": {
    "CLINotFound": "cf CLI is not found in the path. Install the cf CLI: https://github.com/cloudfoundry/cli.",
    "CLINotFoundInPath": "cf CLI not found at: %s",
    "EndPointCredentials": "Failed to login to the Cloud Foundry endpoint. Verify the URL and credentials.",
    "UpdateServicesFailed": "Failed to update user provided services.",
    "PushFailed": "Failed to push app to Cloud Foundry."
  }
}
